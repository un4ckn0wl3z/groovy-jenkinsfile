def imageName = "un4ckn0wl3z/java-maven-app"
def imageVersion = ''

pipeline {
    agent any

    tools {
        maven "maven-3.6"
    } 

    stages {


        stage("increment version") {
            steps {
                script {
                    echo "incrementing application version....."
                    sh 'mvn build-helper:parse-version versions:set -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} versions:commit'
                    def matchers = readFile('pom.xml') =~ '<version>(.+)</version>'
                    def version = matchers[0][1]
                    imageVersion = "$version-$BUILD_NUMBER"
                }
            }
        }


        stage('Update GIT') {
        steps {
            script {
                withCredentials([usernamePassword(credentialsId: 'gitlab-credentials', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    def encodedPassword = URLEncoder.encode("$GIT_PASSWORD",'UTF-8')
                    sh "git config user.email jenkins@unkclub.com"
                    sh "git config user.name jenkins"

                    sh "git remote set-url origin https://${GIT_USERNAME}:${encodedPassword}@gitlab.com/${GIT_USERNAME}/java-maven-app.git"

                    sh "git add ."
                    sh "git commit -m '[CI] version bump from build number: ${env.BUILD_NUMBER}'"
                    sh "git push origin HEAD:$BRANCH_NAME"
                }
            }
        }
        }


        stage("build") {
            steps {
                script {
                    echo "building application....."
                    sh "mvn clean package"
                }
            }
        }
        stage("build image") {
            steps {
                script {
                    echo "building the docker image..."
                    withCredentials([usernamePassword(credentialsId: "docker-hub-credentials", passwordVariable: "PASS", usernameVariable: "USER")])
                    {
                        sh "docker build -t ${imageName}:${imageVersion} ."
                        sh "echo $PASS | docker login -u $USER --password-stdin"
                        sh "docker push ${imageName}:${imageVersion}"
                    }                    
                }
            }
        }
        stage("deploy") {
            steps {
                script {
                    echo "deploying application....."
                }
            }
        }                
    }
}